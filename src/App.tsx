import React, { useState, useEffect, useCallback } from "react";
import {
  ChevronLeft,
  ChevronRight,
  Maximize,
  Minimize,
  Home,
  Menu,
  X,
} from "lucide-react";

// Defini√ß√£o dos tipos
type SlideContent = {
  title: string;
  subtitle?: string;
  content: (string | BulletPoint)[];
  emoji?: string;
};

type BulletPoint = {
  text: string;
  subPoints?: string[];
  emoji?: string;
};

// Dados dos slides
const slideData: SlideContent[] = [
  {
    title: "APLICA√á√ïES TELEM√ÅTICAS E SEGURAN√áA",
    subtitle: "Integra√ß√£o de Redes e Servi√ßos",
    content: [""],
    emoji: "üåê",
  },
  {
    title: "OBJETIVOS",
    content: [
      { text: "Compreender o conceito de aplica√ß√µes telem√°ticas", emoji: "üß†" },
      {
        text: "Explorar aplica√ß√µes telem√°ticas tradicionais e emergentes",
        emoji: "üîç",
      },
      {
        text: "Aprender a configurar diferentes tipos de aplica√ß√µes telem√°ticas",
        emoji: "‚öôÔ∏è",
      },
      {
        text: "Entender fundamentos de seguran√ßa em redes inform√°ticas",
        emoji: "üîí",
      },
      {
        text: "Reconhecer a import√¢ncia da seguran√ßa em ambientes de rede",
        emoji: "üõ°Ô∏è",
      },
    ],
  },
  {
    title: "O QUE S√ÉO APLICA√á√ïES TELEM√ÅTICAS?",
    content: [
      {
        text: "Defini√ß√£o: Aplica√ß√µes que combinam telecomunica√ß√µes e inform√°tica",
        emoji: "üì±üíª",
      },
      {
        text: "Caracter√≠sticas:",
        subPoints: [
          "Transmiss√£o de informa√ß√£o √† dist√¢ncia",
          "Processamento autom√°tico de dados",
          "Integra√ß√£o de diferentes tecnologias",
        ],
        emoji: "‚ú®",
      },
      {
        text: "Import√¢ncia: Fundamentais para a sociedade da informa√ß√£o moderna",
        emoji: "üåç",
      },
    ],
  },
  {
    title: "APLICA√á√ïES TELEM√ÅTICAS TRADICIONAIS",
    content: [
      {
        text: "Correio Eletr√¥nico (E-mail)",
        subPoints: [
          "Protocolos: SMTP, POP3, IMAP",
          "Configura√ß√£o de servidor SMTP e porta",
          "Configura√ß√£o de servidor de recep√ß√£o (POP3/IMAP)",
          "Seguran√ßa na autentica√ß√£o",
        ],
        emoji: "üìß",
      },
      {
        text: "File Transfer Protocol (FTP)",
        subPoints: [
          "Caracter√≠sticas: Transfer√™ncia de arquivos entre sistemas",
          "Modos: Ativo e Passivo",
          "Defini√ß√£o de portas",
          "Permiss√µes de usu√°rios",
          "Diret√≥rios virtuais",
        ],
        emoji: "üìÅ",
      },
      {
        text: "Telnet e SSH",
        subPoints: [
          "Telnet: Acesso remoto (texto plano - inseguro)",
          "SSH: Acesso remoto seguro",
          "Gera√ß√£o de chaves p√∫blicas/privadas",
          "Autentica√ß√£o por senha vs. chaves",
          "T√∫neis SSH",
        ],
        emoji: "üñ•Ô∏è",
      },
    ],
  },
  {
    title: "APLICA√á√ïES MULTIM√çDIA",
    content: [
      {
        text: "Streaming de √Åudio e V√≠deo",
        subPoints: [
          "Protocolos: RTSP, RTP, RTMP",
          "Requisitos de rede: Largura de banda, Lat√™ncia, Jitter",
        ],
        emoji: "üé¨",
      },
      {
        text: "VoIP (Voz sobre IP)",
        subPoints: [
          "Protocolos: SIP, H.323",
          "Infraestrutura: Servidores SIP, Gateways VoIP, Terminais/Softphones",
          "Qualidade de Servi√ßo (QoS)",
        ],
        emoji: "üìû",
      },
      {
        text: "Videoconfer√™ncia",
        subPoints: [
          "Tecnologias: WebRTC, plataformas dedicadas",
          "Requisitos t√©cnicos: Largura de banda sim√©trica, Prioriza√ß√£o de tr√°fego, Configura√ß√£o de firewall",
        ],
        emoji: "üìπ",
      },
    ],
  },
  {
    title: "NOVAS APLICA√á√ïES TELEM√ÅTICAS",
    content: [
      {
        text: "Internet das Coisas (IoT)",
        subPoints: [
          "Caracter√≠sticas: Dispositivos conectados, Comunica√ß√£o M2M, Sensores e atuadores",
          "Protocolos: MQTT, CoAP, AMQP",
          "Desafios: Seguran√ßa, energia, escalabilidade",
        ],
        emoji: "üîå",
      },
      {
        text: "Aplica√ß√µes em Nuvem (Cloud)",
        subPoints: [
          "Modelos de servi√ßo: SaaS, PaaS, IaaS",
          "Benef√≠cios: Elasticidade, Redund√¢ncia, Acessibilidade",
          "Integra√ß√µes: APIs e webhooks",
        ],
        emoji: "‚òÅÔ∏è",
      },
      {
        text: "Blockchain e Aplica√ß√µes Distribu√≠das",
        subPoints: [
          "Caracter√≠sticas: Descentraliza√ß√£o, Imutabilidade, Consenso distribu√≠do",
          "Casos de uso: Contratos inteligentes, registros digitais",
        ],
        emoji: "üîó",
      },
    ],
  },
  {
    title: "CONCEITOS B√ÅSICOS DE SEGURAN√áA EM REDES",
    content: [
      {
        text: "Princ√≠pios Fundamentais",
        subPoints: [
          "Confidencialidade: Prote√ß√£o contra acesso n√£o autorizado",
          "Integridade: Garantia de dados n√£o alterados",
          "Disponibilidade: Sistemas acess√≠veis quando necess√°rio",
          "Autenticidade: Verifica√ß√£o de identidade",
          "N√£o-rep√∫dio: Impossibilidade de negar a√ß√µes realizadas",
        ],
        emoji: "üîê",
      },
      {
        text: "Tipos de Amea√ßas",
        subPoints: [
          "Malware: V√≠rus, worms, trojans, ransomware",
          "Ataques de Rede: DoS/DDoS, man-in-the-middle, sniffing",
          "Engenharia Social: Phishing, pretexting, baiting",
          "Amea√ßas Internas: Colaboradores mal-intencionados",
        ],
        emoji: "‚ö†Ô∏è",
      },
    ],
  },
  {
    title: "SEGURAN√áA EM SISTEMAS VIRTUALIZADOS E CLOUD",
    content: [
      {
        text: "Desafios de Seguran√ßa",
        subPoints: [
          "Multiloca√ß√£o (Multi-tenancy): Isolamento entre inquilinos",
          "Hipervisor: Seguran√ßa da camada de virtualiza√ß√£o",
          "Migra√ß√£o de VMs: Prote√ß√£o durante transfer√™ncias",
          "Controle de acesso: IAM (Identity and Access Management)",
        ],
        emoji: "üîç",
      },
      {
        text: "Melhores Pr√°ticas",
        subPoints: [
          "Segmenta√ß√£o de rede: Microsegmenta√ß√£o",
          "Criptografia de dados: Em repouso e em tr√¢nsito",
          "Monitoramento cont√≠nuo: Detec√ß√£o de anomalias",
          "Automa√ß√£o de seguran√ßa: Security as Code",
        ],
        emoji: "‚úÖ",
      },
    ],
  },
  {
    title: "INCIDENTES E RESPOSTA A DESASTRES EM REDES",
    content: [
      {
        text: "Plano de Resposta a Incidentes",
        subPoints: [
          "Fases: Prepara√ß√£o, Detec√ß√£o e An√°lise, Conten√ß√£o, Erradica√ß√£o, Recupera√ß√£o, Li√ß√µes Aprendidas",
        ],
        emoji: "üö®",
      },
      {
        text: "Plano de Continuidade de Neg√≥cios (BCP)",
        subPoints: [
          "Componentes: An√°lise de impacto, Estrat√©gias de recupera√ß√£o, Plano de comunica√ß√£o, Testes peri√≥dicos",
        ],
        emoji: "üìä",
      },
      {
        text: "Ferramentas e T√©cnicas",
        subPoints: [
          "SIEM (Security Information and Event Management)",
          "IDS/IPS (Intrusion Detection/Prevention Systems)",
          "Forense digital: Investiga√ß√£o p√≥s-incidente",
        ],
        emoji: "üîß",
      },
    ],
  },
  {
    title: "ENCRIPTA√á√ÉO E AUTENTICA√á√ÉO",
    content: [
      {
        text: "Fundamentos de Criptografia",
        subPoints: [
          "Criptografia Sim√©trica: Algoritmos AES, 3DES; Chave √∫nica para cifrar e decifrar",
          "Criptografia Assim√©trica: Algoritmos RSA, ECC; Par de chaves: p√∫blica e privada",
          "Fun√ß√µes Hash: SHA-256, MD5 (obsoleto)",
        ],
        emoji: "üîë",
      },
      {
        text: "Sistemas de Autentica√ß√£o",
        subPoints: [
          "Fatores de Autentica√ß√£o: Conhecimento (senha), Posse (token), Iner√™ncia (biometria)",
          "MFA/2FA: Autentica√ß√£o multi-fator",
          "SSO: Single Sign-On",
        ],
        emoji: "üë§",
      },
    ],
  },
  {
    title: "SEGURAN√áA EM COMUNICA√á√ÉO",
    content: [
      {
        text: "Protocolos Seguros",
        subPoints: [
          "TLS/SSL: Handshake e estabelecimento de sess√£o, Certificados digitais, Vers√µes e vulnerabilidades",
          "HTTPS: Web segura",
          "SFTP/FTPS: Transfer√™ncia segura de arquivos",
          "S/MIME: E-mail seguro",
        ],
        emoji: "üîí",
      },
      {
        text: "Seguran√ßa de Rede F√≠sica",
        subPoints: [
          "Seguran√ßa de Portas: 802.1X",
          "Seguran√ßa Wi-Fi: WPA3, autentica√ß√£o empresarial",
          "Segmenta√ß√£o de Rede: VLANs, zonas desmilitarizadas (DMZ)",
        ],
        emoji: "üì°",
      },
    ],
  },
  {
    title: "REDES PRIVADAS VIRTUAIS (VPNs)",
    content: [
      {
        text: "Tipos de VPNs",
        subPoints: [
          "Site-to-Site: Interconex√£o de redes",
          "Remote Access: Acesso remoto individual",
          "VPNs baseadas em SSL: Acesso via navegador",
        ],
        emoji: "üîó",
      },
      {
        text: "Protocolos VPN",
        subPoints: [
          "IPsec: Seguran√ßa na camada 3 (rede)",
          "OpenVPN: Solu√ß√£o de c√≥digo aberto",
          "WireGuard: Nova gera√ß√£o, alta performance",
        ],
        emoji: "üìã",
      },
      {
        text: "Configura√ß√£o de VPN",
        subPoints: [
          "Autentica√ß√£o: Certificados, senhas, tokens",
          "T√∫neis e Encapsulamento: Modo de transporte vs. t√∫nel",
          "Split Tunneling: Roteamento seletivo de tr√°fego",
        ],
        emoji: "‚öôÔ∏è",
      },
    ],
  },
  {
    title: "PR√ÅTICA: CONFIGURANDO SEGURAN√áA",
    content: [
      {
        text: "Demonstra√ß√£o 1: Configura√ß√£o de Firewall",
        subPoints: [
          "Defini√ß√£o de regras de acesso",
          "Filtragem de pacotes",
          "NAT e Port Forwarding",
        ],
        emoji: "üõ°Ô∏è",
      },
      {
        text: "Demonstra√ß√£o 2: Implementa√ß√£o de VPN",
        subPoints: [
          "Instala√ß√£o e configura√ß√£o de servidor VPN",
          "Cria√ß√£o de certificados",
          "Teste de conex√£o cliente",
        ],
        emoji: "üîå",
      },
      {
        text: "Laborat√≥rio: Detec√ß√£o de Vulnerabilidades",
        subPoints: [
          "Uso de ferramentas de escaneamento",
          "Identifica√ß√£o de riscos",
          "Implementa√ß√£o de corre√ß√µes",
        ],
        emoji: "üîç",
      },
    ],
  },
  {
    title: "AVALIA√á√ÉO E PR√ìXIMOS PASSOS",
    content: [
      {
        text: "Recursos Adicionais",
        subPoints: [
          "Documenta√ß√£o t√©cnica",
          "Cursos especializados",
          "Ferramentas recomendadas",
        ],
        emoji: "üìö",
      },
      {
        text: "Tend√™ncias Futuras",
        subPoints: [
          "Zero Trust Security",
          "DevSecOps",
          "Seguran√ßa para Edge Computing",
          "IA aplicada √† seguran√ßa",
        ],
        emoji: "üöÄ",
      },
    ],
  },
  {
    title: "OBRIGADO!",
    subtitle: "Perguntas?",
    content: [""],
    emoji: "üôè",
  },
];

// Componente principal
const PresentationApp = () => {
  const [currentSlide, setCurrentSlide] = useState(0);
  const [isFullscreen, setIsFullscreen] = useState(false);
  const [isMobileMenuOpen, setIsMobileMenuOpen] = useState(false);
  const [slideIn, setSlideIn] = useState(true);
  const [direction, setDirection] = useState("right");

  // Handle fullscreen functionality
  const toggleFullscreen = useCallback(() => {
    if (!document.fullscreenElement) {
      document.documentElement
        .requestFullscreen()
        .then(() => {
          setIsFullscreen(true);
        })
        .catch((err) => {
          console.error(
            `Error attempting to enable fullscreen: ${err.message}`
          );
        });
    } else {
      if (document.exitFullscreen) {
        document
          .exitFullscreen()
          .then(() => {
            setIsFullscreen(false);
          })
          .catch((err) => {
            console.error(
              `Error attempting to exit fullscreen: ${err.message}`
            );
          });
      }
    }
  }, []);

  // Navigation functions
  const goToSlide = useCallback(
    (slideIndex: number) => {
      if (slideIndex < 0 || slideIndex >= slideData.length) return;

      setSlideIn(false);
      setDirection(slideIndex > currentSlide ? "right" : "left");

      setTimeout(() => {
        setCurrentSlide(slideIndex);
        setSlideIn(true);
      }, 300);
    },
    [currentSlide]
  );

  const goToNext = useCallback(() => {
    if (currentSlide < slideData.length - 1) {
      goToSlide(currentSlide + 1);
    }
  }, [currentSlide, goToSlide]);

  const goToPrevious = useCallback(() => {
    if (currentSlide > 0) {
      goToSlide(currentSlide - 1);
    }
  }, [currentSlide, goToSlide]);

  const goToHome = useCallback(() => {
    goToSlide(0);
  }, [goToSlide]);

  // Keyboard navigation
  useEffect(() => {
    const handleKeyDown = (e: KeyboardEvent) => {
      if (e.key === "ArrowRight" || e.key === " ") {
        goToNext();
      } else if (e.key === "ArrowLeft") {
        goToPrevious();
      } else if (e.key === "Home") {
        goToHome();
      } else if (e.key === "f" || e.key === "F") {
        toggleFullscreen();
      }
    };

    window.addEventListener("keydown", handleKeyDown);
    return () => {
      window.removeEventListener("keydown", handleKeyDown);
    };
  }, [goToNext, goToPrevious, goToHome, toggleFullscreen]);

  // Progress bar calculation
  const progressPercentage = ((currentSlide + 1) / slideData.length) * 100;

  return (
    <div className="h-screen flex flex-col bg-gradient-to-br from-blue-900 to-indigo-900 text-white overflow-hidden">
      {/* Top Navigation Bar */}
      <div className="flex justify-between items-center p-2 bg-blue-950 shadow-md">
        <div className="flex items-center space-x-2">
          <button
            onClick={goToHome}
            className="p-2 rounded-full hover:bg-blue-700 transition-colors"
            aria-label="In√≠cio"
          >
            <Home size={20} />
          </button>
          <span className="hidden md:inline text-sm">
            Aplica√ß√µes Telem√°ticas e Seguran√ßa
          </span>
        </div>

        <div className="flex items-center">
          <div className="hidden md:flex space-x-2 mr-2">
            <button
              onClick={goToPrevious}
              disabled={currentSlide === 0}
              className={`p-2 rounded-full ${
                currentSlide === 0
                  ? "opacity-50 cursor-not-allowed"
                  : "hover:bg-blue-700"
              } transition-colors`}
              aria-label="Slide anterior"
            >
              <ChevronLeft size={20} />
            </button>
            <span className="text-sm">
              {currentSlide + 1} / {slideData.length}
            </span>
            <button
              onClick={goToNext}
              disabled={currentSlide === slideData.length - 1}
              className={`p-2 rounded-full ${
                currentSlide === slideData.length - 1
                  ? "opacity-50 cursor-not-allowed"
                  : "hover:bg-blue-700"
              } transition-colors`}
              aria-label="Pr√≥ximo slide"
            >
              <ChevronRight size={20} />
            </button>
          </div>

          <button
            onClick={toggleFullscreen}
            className="p-2 rounded-full hover:bg-blue-700 transition-colors"
            aria-label="Alternar tela cheia"
          >
            {isFullscreen ? <Minimize size={20} /> : <Maximize size={20} />}
          </button>

          <button
            onClick={() => setIsMobileMenuOpen(!isMobileMenuOpen)}
            className="md:hidden p-2 rounded-full hover:bg-blue-700 transition-colors"
            aria-label="Menu mobile"
          >
            {isMobileMenuOpen ? <X size={20} /> : <Menu size={20} />}
          </button>
        </div>
      </div>

      {/* Mobile Menu */}
      {isMobileMenuOpen && (
        <div className="md:hidden bg-blue-900 p-4 shadow-lg animate-fade-in">
          <div className="flex justify-center space-x-4 mb-4">
            <button
              onClick={goToPrevious}
              disabled={currentSlide === 0}
              className={`p-2 rounded-full ${
                currentSlide === 0
                  ? "opacity-50 cursor-not-allowed"
                  : "hover:bg-blue-700"
              } transition-colors`}
              aria-label="Slide anterior"
            >
              <ChevronLeft size={24} />
            </button>
            <span className="flex items-center">
              {currentSlide + 1} / {slideData.length}
            </span>
            <button
              onClick={goToNext}
              disabled={currentSlide === slideData.length - 1}
              className={`p-2 rounded-full ${
                currentSlide === slideData.length - 1
                  ? "opacity-50 cursor-not-allowed"
                  : "hover:bg-blue-700"
              } transition-colors`}
              aria-label="Pr√≥ximo slide"
            >
              <ChevronRight size={24} />
            </button>
          </div>

          <div className="grid grid-cols-2 gap-2">
            {slideData.map((slide, index) => (
              <button
                key={index}
                onClick={() => {
                  goToSlide(index);
                  setIsMobileMenuOpen(false);
                }}
                className={`p-2 text-left text-xs truncate rounded ${
                  currentSlide === index ? "bg-blue-600" : "hover:bg-blue-800"
                } transition-colors`}
              >
                {index + 1}. {slide.title}
              </button>
            ))}
          </div>
        </div>
      )}

      {/* Progress Bar */}
      <div className="h-1 bg-blue-800">
        <div
          className="h-full bg-blue-400 transition-all duration-300 ease-in-out"
          style={{ width: `${progressPercentage}%` }}
        ></div>
      </div>

      {/* Main Slide Content */}
      <div className="flex-1 flex justify-center items-center p-4 overflow-hidden">
        <div
          className={`w-full max-w-4xl bg-gradient-to-br from-blue-800 to-indigo-800 rounded-lg shadow-2xl p-6 md:p-8 transform transition-all duration-300 ease-in-out ${
            slideIn
              ? "translate-x-0 opacity-100"
              : direction === "right"
              ? "translate-x-full opacity-0"
              : "-translate-x-full opacity-0"
          }`}
        >
          <div className="flex justify-between items-start mb-4">
            <div>
              <h1 className="text-2xl md:text-3xl font-bold mb-2">
                {slideData[currentSlide].title}
              </h1>
              {slideData[currentSlide].subtitle && (
                <h2 className="text-lg md:text-xl text-blue-200 mb-4">
                  {slideData[currentSlide].subtitle}
                </h2>
              )}
            </div>
            {slideData[currentSlide].emoji && (
              <span className="text-4xl md:text-5xl">
                {slideData[currentSlide].emoji}
              </span>
            )}
          </div>

          <div className="space-y-4 overflow-y-auto max-h-[60vh]">
            {slideData[currentSlide].content.map((item, index) => {
              if (typeof item === "string") {
                return (
                  <p key={index} className="text-lg">
                    {item}
                  </p>
                );
              } else {
                return (
                  <div
                    key={index}
                    className="animate-fade-in"
                    style={{ animationDelay: `${index * 150}ms` }}
                  >
                    <div className="flex items-start space-x-2 mb-2">
                      {item.emoji && (
                        <span className="text-xl">{item.emoji}</span>
                      )}
                      <h3 className="text-lg font-semibold text-blue-200">
                        {item.text}
                      </h3>
                    </div>

                    {item.subPoints && (
                      <ul className="ml-8 space-y-1">
                        {item.subPoints.map((subPoint, subIndex) => (
                          <li
                            key={subIndex}
                            className="list-disc text-sm md:text-base animate-fade-in"
                            style={{
                              animationDelay: `${
                                index * 150 + (subIndex + 1) * 100
                              }ms`,
                            }}
                          >
                            {subPoint}
                          </li>
                        ))}
                      </ul>
                    )}
                  </div>
                );
              }
            })}
          </div>
        </div>
      </div>

      {/* Bottom Navigation Controls */}
      <div className="p-4 flex justify-between">
        <button
          onClick={goToPrevious}
          disabled={currentSlide === 0}
          className={`flex items-center space-x-1 px-3 py-2 rounded-lg ${
            currentSlide === 0
              ? "opacity-50 cursor-not-allowed"
              : "bg-blue-700 hover:bg-blue-600 active:bg-blue-800"
          } transition-colors`}
          aria-label="Slide anterior"
        >
          <ChevronLeft size={16} />
          <span className="hidden md:inline">Anterior</span>
        </button>

        <button
          onClick={goToNext}
          disabled={currentSlide === slideData.length - 1}
          className={`flex items-center space-x-1 px-3 py-2 rounded-lg ${
            currentSlide === slideData.length - 1
              ? "opacity-50 cursor-not-allowed"
              : "bg-blue-700 hover:bg-blue-600 active:bg-blue-800"
          } transition-colors`}
          aria-label="Pr√≥ximo slide"
        >
          <span className="hidden md:inline">Pr√≥ximo</span>
          <ChevronRight size={16} />
        </button>
      </div>

      {/* Add custom styles for animations */}
      <style jsx>{`
        @keyframes fadeIn {
          from {
            opacity: 0;
            transform: translateY(10px);
          }
          to {
            opacity: 1;
            transform: translateY(0);
          }
        }
        .animate-fade-in {
          animation: fadeIn 0.5s ease-out forwards;
          opacity: 0;
        }
      `}</style>
    </div>
  );
};

export default PresentationApp;
